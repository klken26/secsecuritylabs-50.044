## Place your answers here.
Exercise 1
We will need to find variables that invovles memory on the stack, either
through allocation of memory, use of buffers / pointers in functions.
zookd.c seems like a daemon handler, which will fork() whenever there is
a new client to handle their requests. Most of the variables are either 
declared as static or const; Hence they are either not in the stack nor not 
modifiable during runtime. 
However, zookd.c runs on functions from http.c, we can do code tracing
to find the functions that can change the stack when zookws is running.
In the process_client() function in zookd.c, there is a reqpath[4096]
variable that is parsed as a pointer to the http_request_line() function
in http.c, which seems like a plausible point of exploitation.




